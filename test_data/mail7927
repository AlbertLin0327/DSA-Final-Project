From: Savannah
Date: 1 June 2012 at 06:33
Message-ID: 7927
Subject: SymbOS 
To: Jason
Content:
SymbOS is a free multitasking operating system for Z80-based 8-bit computer systems. At present it is available for the Amstrad CPC series of computers, as well as for all MSX models starting from the MSX2 standard and for most Amstrad PCW models.[1] Contrary to early 8-bit operating systems it is based on a microkernel, which provides pre-emptive and priority oriented multitasking and manages RAM with a size of up to 1024kB. SymbOS contains a Microsoft Windows like Graphical user interface, supports hard disks with a capacity of up to 128GB and can already be booted on an unexpanded Amstrad CPC-6128, a 128K-MSX2 and an Amstrad PCW. Although only an 8-bit CPU, the Z80 is capable of running a pre-emptive multitasking operating system. Features such as memory protection, which the Z80 does not support, are not essential in such an OS. For example, AmigaOS does not feature memory protection either. The MP/M OS proved that multitasking on the Z80 CPU was possible, however it was not generally available for home computers. While the MOS Technology 6502 cannot move the stack pointer, the Z80 can freely relocate it to any position in memory, which is more or less a requirement for pre-emptive multitasking. The existence of an alternative register set accelerates context switching between tasks dramatically. The restriction of Z80 system to a 64kB address space can be solved with bank switching. In this way computers like the Amstrad CPC and PCW, MSX, Enterprise or SAM Coup are able to access hundreds or thousands of kilobytes of memory. SymbOS includes a microkernel, which is capable of performing task management, memory management and inter-process communication.[2] For task management, a combination of preemptive and cooperative multitasking was chosen, which makes different task priorities possible. Preemptive means that tasks are interrupted after a certain amount of time by the operating system, in order to share the CPU time with other tasks. Cooperatively means that a task stops using CPU time by itself. It does that, if it's finished with its current job or waiting for a certain event. Because of this combination it is possible to assign priorities. Tasks with low priority get CPU time only if all tasks with higher priorities are not then working. Memory management divides the entire RAM into small 256 byte blocks, which can be assigned dynamically. Applications are always running in a secondary 64kB RAM bank, where no memory space is occupied by the operating system or the video memory. That makes it possible to reserve up to 63kB in one piece. Banking management ensures that the system is able to administer memory with a size of up to one megabyte, even though the Z80 CPU has only a 16-bit address bus. It makes transparent access to memory and functions placed in other 64kB banks possible. Communication between different tasks and the operating system usually does not take place via "Calls", but is done via "Messages". This is necessary inside a multitasking environment to avoid organization problems with the stack, global variables and shared system resources. The SymbOS kernel supports synchronous as well as asynchronous IPC. The GUI of SymbOS works in a completely object-oriented manner. The look and feel mimics that of Microsoft Windows. It contains the well-known task bar with the clock and the "start" menu and can open up to 32 windows that can be moved, resized and scrolled. As the complete system is written in optimized assembly language, the GUI is fast compared to modern systems. Content of a window is defined with "controls" that are primitive GUI elements such as sliders, check boxes, text lines, buttons or graphics. The background or invisible areas of a window don't need to be saved in a separate bitmap buffer. If an area needs to be restored on the display, its contents will be redrawn instead. This makes SymbOS GUI much more memory-friendly compared to most other 8-bit GUIs. SymbOS supports the file systems CP/M, AMSDOS, FAT12, FAT16, FAT32, on all platforms. With the last one SymbOS is able to address mass storage devices with a capacity of up to 128GB. Also the ability to administer files with a size of up to 2GB is uncommon for an 8-bit system. Because of the FAT support data exchange with other computers is quite easy, as most 32 and 64 bit operating systems do support the three FAT file systems. There are several standard applications available for SymbOS, which most resemble their well-known Windows and Mac OS counterparts. Few examples are SymCommander (similar to Norton Commander), SymShell (cmd.exe), SymZilla (Mozilla Firefox), SymPlay (QuickTime), SymAmp (Winamp) and Minesweeper.[3] SymbOS was originally developed for the Amstrad CPC. Owing to its modular structure, with the strict separation of general and hardware components, porting to other Z80-based systems is quite easy. The MSX computers starting with the MSX2 standard have been supported since summer 2006.[4] The Amstrad PCW port has been available since August 2007[5]. Versions for the Enterprise 128 and the SAM Coup are possible, too, as they fulfill the requirements for SymbOS. By keeping a basic condition for an operating system, the strict separation of hardware and application software by an intermediate layer, SymbOS applications run platform-independently on each computer and do not have to be adapted for a special system, with the obvious exception of applications that directly access particular hardware. SymbOS was originally started as an experiment to find out to what extent it is possible to implement a multitasking based operating system with a windowed GUI on an 8-bit computer from 1985. GEOS contributed to the motivation, but the structure and features of SymbOS aren't similar to that system. The release in 2006 proved that such a "mini windows" system is possible on a 20 year-old home computer with only quantitative limitations. SymbOS is one of the largest retro computing software projects of recent years. One of the goals of the project is to allow these old machines to be used like a modern PC, using hardware extensions.
I read the paragraph on http://wikipedia.org
