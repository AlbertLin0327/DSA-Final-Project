From: Clement
Date: 19 May 2012 at 16:54
Message-ID: 7772
Subject: Database virtualization 
To: Claudia
Content:
Database virtualization is the decoupling of the database layer, which lies between the storage and application layers within the application stack. Virtualization at the database layer allows hardware resources to be extended to allow for better sharing resources between applications and users, masking of the physical location and configuration of a database from querying programs, as well as enable more scalable computing. The act of partitioning data stores as a database grows has been in use for several decades. There are two primary ways that data has been partitioned inside legacy data management solutions: I. Shared All Databasesan architecture that assumes all database cluster nodes share a single partition. Inter-node communications is used to synchronize update activities performed by different nodes on the cluster. Shared-all data management systems are limited to single-digit node clusters. II. Shared-Nothing Databasesan architecture in which all data is segregated to internally managed partitions with clear, well-defined data location boundaries. Shared-nothing databases require manual partition management. In virtual partitioning, logical data is abstracted from physical data by autonomously creating and managing large number of data partitions (100s to 1000s). Because they are autonomously maintained, resources required to manage the partitions are minimal. This kind of massive partitioning results in: Shared-all and shared nothing architectures allowing scalability through multiple data partitions and cross-partition querying and transaction processing without full partition scanning. Partitioning database sources from consumers is a fundamental concept. With greater number of database sources, inserting a horizontal data virtualization layer between the sources and consumers helps address this complexity. Rick van der Lans, author of multiple books on SQL and relational databases, has defined data virtualization as "the process of offering data consumers a data access interface that hides the technical aspects of stored data, such as location, storage structure, API, access language, and storage technology." [1]
I read the paragraph on http://wikipedia.org
